{
  "hash": "c4c239b40bdd469cf82aeae7afbbe552",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: \"LS 빅데이터 스쿨 Homework 5\"\nauthor: \"yongraegod\"\ndate: \"2024-07-30\"\ncategories: [bigdata]\n---\n\n![](damgom5.jpg)\n\n\n## 챕터 9-2 설문조사 그래프에서 각 성별 95% 신뢰구간 계산후 그리기.\n- norm.ppf() 사용해서 그릴 것.\n- 모분산은 표본 분산을 사용해서 추정.\n- 위 아래 수직 막대기로 표시 (아래 그림 참조)\n\n![](graph.png)\n\n***\n\n::: {#427aff6c .cell execution_count=1}\n``` {.python .cell-code}\n!pip install pyreadstat\nimport pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\n# 데이터 불러오기\nraw_welfare = pd.read_spss('C:/Users/USER/Documents/LS빅데이터스쿨/lsbigdata-project1/data/koweps/Koweps_hpwc14_2019_beta2.sav')\n\n# 복사본 만들기\nwelfare = raw_welfare.copy()\nwelfare.shape\nwelfare.info()\n\n# 변수명 바꾸기\nwelfare = welfare.rename(\n    columns = {'h14_g3'     : 'sex',\n               'h14_g4'     : 'birth',\n               'h14_g10'    : 'marriage_type',\n               'h14_g11'    : 'religion',\n               'p1402_8aq1' : 'income',\n               'h14_eco9'   : 'code_job',\n               'h14_reg7'   : 'code_region'}\n)\n\n# 분석에 필요한 부분만 추출해서 저장\nwelfare = welfare[['sex','birth','marriage_type','religion',\n                   'income','code_job','code_region']]\n\n# 성별 항목에 이름 부여                 \nwelfare['sex'] = np.where(welfare['sex'] == 1, 'male', 'female')\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRequirement already satisfied: pyreadstat in c:\\ds\\python\\python312\\lib\\site-packages (1.2.7)\nRequirement already satisfied: pandas>=1.2.0 in c:\\ds\\python\\python312\\lib\\site-packages (from pyreadstat) (2.2.2)\nRequirement already satisfied: numpy>=1.26.0 in c:\\ds\\python\\python312\\lib\\site-packages (from pandas>=1.2.0->pyreadstat) (2.0.0)\nRequirement already satisfied: python-dateutil>=2.8.2 in c:\\ds\\python\\python312\\lib\\site-packages (from pandas>=1.2.0->pyreadstat) (2.9.0.post0)\nRequirement already satisfied: pytz>=2020.1 in c:\\ds\\python\\python312\\lib\\site-packages (from pandas>=1.2.0->pyreadstat) (2024.1)\nRequirement already satisfied: tzdata>=2022.7 in c:\\ds\\python\\python312\\lib\\site-packages (from pandas>=1.2.0->pyreadstat) (2024.1)\nRequirement already satisfied: six>=1.5 in c:\\ds\\python\\python312\\lib\\site-packages (from python-dateutil>=2.8.2->pandas>=1.2.0->pyreadstat) (1.16.0)\n<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 14418 entries, 0 to 14417\nColumns: 830 entries, h14_id to h14_pers_income5\ndtypes: float64(826), object(4)\nmemory usage: 91.3+ MB\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\n[notice] A new release of pip is available: 24.0 -> 24.2\n[notice] To update, run: python.exe -m pip install --upgrade pip\n```\n:::\n:::\n\n\n***\n\n## 각 성별 데이터 나누기\n\n::: {#d058d7e2 .cell execution_count=2}\n``` {.python .cell-code}\nmale_data = welfare.query('sex == \"male\"')[[\"sex\", \"income\"]]\n\nfemale_data = welfare.query('sex == \"female\"')[[\"sex\", \"income\"]]\n\nprint(male_data)\nprint(female_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n        sex  income\n1      male     NaN\n2      male   107.0\n3      male   192.0\n6      male     NaN\n11     male     NaN\n...     ...     ...\n14407  male     NaN\n14410  male   200.0\n14412  male     NaN\n14415  male     NaN\n14417  male     NaN\n\n[6505 rows x 2 columns]\n          sex  income\n0      female     NaN\n4      female     NaN\n5      female     NaN\n7      female    27.0\n8      female    27.0\n...       ...     ...\n14409  female     NaN\n14411  female     NaN\n14413  female     NaN\n14414  female     NaN\n14416  female   200.0\n\n[7913 rows x 2 columns]\n```\n:::\n:::\n\n\n## 각 성별 평균 구하기\n\n::: {#df7b33d9 .cell execution_count=3}\n``` {.python .cell-code}\nmale_mean = male_data['income'].mean()\nfemale_mean = female_data['income'].mean()\n\nprint(\"남성의 평균은\", male_mean)\nprint(\"여성의 평균은\", female_mean)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n남성의 평균은 349.03757099169945\n여성의 평균은 186.29309576837417\n```\n:::\n:::\n\n\n## 각 성별 표본분산 구하기\n\n::: {#440af2f1 .cell execution_count=4}\n``` {.python .cell-code}\nmale_s_2 = np.var(male_data['income'], ddof = 1)\nfemale_s_2 = np.var(female_data['income'], ddof = 1)\n\nprint(\"남성의 표본분산은\", male_s_2)\nprint(\"여성의 표본분산은\", female_s_2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n남성의 표본분산은 47463.96187451692\n여성의 표본분산은 17439.157372096437\n```\n:::\n:::\n\n\n## 각 성별 표본수 구하기\n\n::: {#9ba96174 .cell execution_count=5}\n``` {.python .cell-code}\nmale_n = male_data['income'].count()\nfemale_n = female_data['income'].count()\n\nprint(\"남성의 표본수는\", male_n)\nprint(\"여성의 표본수는\", female_n)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n남성의 표본수는 2289\n여성의 표본수는 2245\n```\n:::\n:::\n\n\n## 각 성별 표준편차 구하기\n\n::: {#28c5d94c .cell execution_count=6}\n``` {.python .cell-code}\nmale_scale = np.sqrt(male_s_2 / male_n)\nfemale_scale = np.sqrt(female_s_2 / female_n)\n\n\nprint(\"남성의 표준편차는\", male_scale)\nprint(\"여성의 표준편차는\", female_scale)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n남성의 표준편차는 4.553644231399566\n여성의 표준편차는 2.7871129918683994\n```\n:::\n:::\n\n\n## 각 성별 신뢰구간 95% 구하기\n\n::: {#506e6e20 .cell execution_count=7}\n``` {.python .cell-code}\nfrom scipy.stats import norm\nz = norm.ppf(0.975,loc=0,scale=1)\n\nmale_0975 = male_mean + z * male_scale\nmale_0025 = male_mean - z * male_scale\n\nfemale_0975 = female_mean + z * female_scale\nfemale_0025 = female_mean - z * female_scale\n\nprint(\"남성의 신뢰구간은 (\", male_0025, \",\", male_0975, \")\")\nprint(\"여성의 신뢰구간은 (\", female_0025, \",\", female_0975, \")\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n남성의 신뢰구간은 ( 340.11259229974775 , 357.96254968365116 )\n여성의 신뢰구간은 ( 180.83045468346845 , 191.7557368532799 )\n```\n:::\n:::\n\n\n## 그래프 그리기\n\n::: {#1fffff83 .cell execution_count=8}\n``` {.python .cell-code}\nsex_income = welfare.dropna(subset = 'income') \\\n                    .groupby('sex', as_index = False) \\\n                    .agg(mean_income = ('income', 'mean'))\n\nsns.barplot(data = sex_income, x = 'sex', y = 'mean_income', hue = 'sex')\n\n# 남성 그래프\n# plt.axhline(y = male_0975, color = \"red\", linestyle = '--', linewidth = 0.5)\n# plt.axhline(y = male_0025, color = \"red\", linestyle = '--', linewidth = 0.5)\nplt.plot([1,1], [male_0025, male_0975], color = \"red\", linestyle = '-')\nplt.plot([0.9,1.1], [male_0025, male_0025], color = \"red\", linestyle = '--')\nplt.plot([0.9,1.1], [male_0975, male_0975], color = \"red\", linestyle = '--')\n\n# 여성 그래프\n# plt.axhline(y = female_0975, color = \"red\", linestyle = '--', linewidth = 0.5)\n# plt.axhline(y = female_0025, color = \"red\", linestyle = '--', linewidth = 0.5)\nplt.plot([0,0], [female_0025, female_0975], color = \"red\", linestyle = '-')\nplt.plot([-0.1,0.1], [female_0025, female_0025], color = \"red\", linestyle = '--')\nplt.plot([-0.1,0.1], [female_0975, female_0975], color = \"red\", linestyle = '--')\n\nplt.show()\nplt.clf()\n```\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-9-output-1.png){width=593 height=429}\n:::\n\n::: {.cell-output .cell-output-display}\n```\n<Figure size 672x480 with 0 Axes>\n```\n:::\n:::\n\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [],
    "includes": {}
  }
}